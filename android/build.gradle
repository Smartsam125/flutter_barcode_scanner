group 'com.amolg.flutterbarcodescanner'
version '1.0'

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.4.2'
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'

// Read Flutter SDK path from local.properties
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    flutterRoot = System.getenv('FLUTTER_ROOT')
}

android {
    namespace 'com.amolg.flutterbarcodescanner'
    compileSdk 35

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    defaultConfig {
        minSdk 21
    }

    dependencies {
        // Add Flutter SDK if path is available
        if (flutterRoot != null) {
            compileOnly files("$flutterRoot/bin/cache/artifacts/engine/android-arm/flutter.jar")
        }

        implementation 'androidx.appcompat:appcompat:1.7.1'
        implementation 'androidx.legacy:legacy-support-v4:1.0.0'
        implementation 'com.google.android.material:material:1.13.0'
        implementation 'com.google.android.gms:play-services-vision:20.1.3'

        testImplementation 'junit:junit:4.13.2'
        testImplementation 'org.mockito:mockito-core:5.8.0'
    }

    testOptions {
        unitTests.all {
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen {false}
                showStandardStreams = true
            }
        }
    }
}